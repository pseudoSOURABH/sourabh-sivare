#include <bits/stdc++.h>
using namespace std;

struct Interval
{
    int start,end;
};

bool compareInterval(Interval i1,Interval i2)

{
    return( i1.start<i2.start);
}

void merge(Interval arr[],int n)
{
    
    if(n<=0)
    return ;
    
    sort(arr,arr+n,compareInterval);
    
    stack<Interval>s;
    
    s.push(arr[0]);
    
    for(int i=1;i<n;i++)
    {
        Interval top=s.top();
        if(top.end<arr[i].start)
        {
            s.push(arr[i]);
        }
        
        else if(top.end<arr[i].end)
        {
            top.end=arr[i].end;
            s.pop();
            s.push(top);
        }
        
        
       
    }
     while(!s.empty())
        {
            Interval t=s.top();
            cout<<"["<<t.start<<","<<t.end<<"]"<<ends;
            s.pop();
        }
}
int main() {
	Interval a[] =  { {6,8}, {1,9}, {2,4}, {4,7} };
    int s= sizeof(a)/sizeof(a[0]);
    merge(a, s);
    
	return 0;
}
