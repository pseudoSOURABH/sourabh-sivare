#include <bits/stdc++.h>
using namespace std;

vector<int>adj[100003];
int vis[100003];

void bfs(int node)
{
    vis[node]=1;
    queue<int>q;
    
    q.push(node);
    
    
    while(!q.empty())
    {
        int nd=q.front();
        q.pop();
        
        cout<<nd<<endl;
        
        for(auto it:adj[nd])
        {
            if(vis[it]==0)
            {
                vis[it]==1;
                q.push(it);
            }
        }
    }
}

void bfsSolve()
{
    int n,m;
    cin>>n>>m;
    
    for(int i=1;i<n;i++)
    {
        vis[i]==0;
    }
    
    for(int i=0;i<m;i++)
    {
        int u,v;
    cin>>u>>v;
    
    adj[u].push_back(v);
    adj[v].push_back(u);
    }
    
    for(int it=1;it<=n;it++)
    {
        if(vis[it]==0)
        {
            bfs(it);
        }
    }
}
int main() {
// 	cout<<"GfG!";
	return 0;
}
